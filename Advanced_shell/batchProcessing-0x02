#!/bin/bash

# Create output directory and error log
OUTPUT_DIR="pokemon_data"
ERROR_LOG="errors.txt"
mkdir -p "$OUTPUT_DIR"
> "$ERROR_LOG"  # Clear previous errors

# List of Pokémon
POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Function to fetch data with retries
fetch_pokemon() {
  local POKEMON_NAME=$1
  local OUTPUT_FILE="$OUTPUT_DIR/${POKEMON_NAME}.json"
  local API_URL="https://pokeapi.co/api/v2/pokemon/$POKEMON_NAME"
  local MAX_RETRIES=3
  local RETRY_DELAY=2
  local ATTEMPT=1

  echo "Fetching data for $POKEMON_NAME..."

  while [ $ATTEMPT -le $MAX_RETRIES ]; do
    curl -s -f "$API_URL" -o "$OUTPUT_FILE"
    if [ $? -eq 0 ]; then
      echo "Saved data to $OUTPUT_FILE ✅"
      return 0
    else
      echo "Attempt $ATTEMPT failed for $POKEMON_NAME"
      ((ATTEMPT++))
      sleep $RETRY_DELAY
    fi
  done

  echo "Failed to fetch data for $POKEMON_NAME after $MAX_RETRIES attempts ❌" | tee -a "$ERROR_LOG"
  return 1
}

# Loop through all Pokémon
for POKEMON in "${POKEMON_LIST[@]}"; do
  fetch_pokemon "$POKEMON"
  sleep 2  # Respect API rate limits
done
